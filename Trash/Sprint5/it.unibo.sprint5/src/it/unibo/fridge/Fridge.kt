/* Generated by AN DISI Unibo */ 
package it.unibo.fridge

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Fridge ( name: String, scope: CoroutineScope ) : ActorBasicFsm( name, scope){
 	
	override fun getInitialState() : String{
		return "s0"
	}
		
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		
					var food1 = 10
					var food2 = 10
					var noFood : Boolean = false
					var selectedFood = -1
					var quantityFood = 0
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						println("Fridge Started")
						itunibo.coap.modelResourceCoap.create(myself ,"fridge", 5684 )
						forward("takeFood", "takeFood(1,0)" ,"fridge" ) 
						forward("takeFood", "takeFood(2,0)" ,"fridge" ) 
					}
					 transition( edgeName="goto",targetState="waitCmd", cond=doswitch() )
				}	 
				state("waitCmd") { //this:State
					action { //it:State
						noFood = false
					}
					 transition(edgeName="t00",targetState="checkingFood",cond=whenEvent("takeFood"))
					transition(edgeName="t01",targetState="puttingFood",cond=whenEvent("putFood"))
				}	 
				state("puttingFood") { //this:State
					action { //it:State
						
										selectedFood = payloadArg(0).toInt()
										quantityFood = payloadArg(1).toInt()
						if(selectedFood == 1){ food1 += quantityFood
						 }
						else
						 { food2 += quantityFood
						  }
					}
					 transition( edgeName="goto",targetState="waitCmd", cond=doswitch() )
				}	 
				state("checkingFood") { //this:State
					action { //it:State
						if( checkMsgContent( Term.createTerm("takeFood(X,Q)"), Term.createTerm("takeFood(X,Q)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								
												selectedFood = payloadArg(0).toInt()
												quantityFood = payloadArg(1).toInt()
								if(selectedFood == 1){ if(food1 == 0){ println("NO FOOD 1 ")
								noFood = true
								 }
								 }
								else
								 { if(food2 == 0){ noFood = true
								 println("NO FOOD 2 ")
								  }
								  }
						}
					}
					 transition( edgeName="goto",targetState="waitCmd", cond=doswitchGuarded({noFood == true}) )
					transition( edgeName="goto",targetState="takingFood", cond=doswitchGuarded({! noFood == true}) )
				}	 
				state("takingFood") { //this:State
					action { //it:State
						println("selectedFood : $selectedFood")
						if(selectedFood == 1){ food1 = food1 - quantityFood
						 }
						else
						 { if(selectedFood == 2){ food2 = food2 - quantityFood
						  }
						 else
						  { println("Error")
						   }
						  }
					}
					 transition( edgeName="goto",targetState="updateModelFridge", cond=doswitch() )
				}	 
				state("updateModelFridge") { //this:State
					action { //it:State
						itunibo.robot.resourceModelSupport.updateFridgeModel(myself ,"FOOD1:{$food1};FOOD2:[$food2];" )
					}
					 transition( edgeName="goto",targetState="waitCmd", cond=doswitch() )
				}	 
			}
		}
}
