/* Generated by AN DISI Unibo */ 
package it.unibo.leds

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Leds ( name: String, scope: CoroutineScope ) : ActorBasicFsm( name, scope){
 	
	override fun getInitialState() : String{
		return "s0"
	}
		
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						println("Start leds")
						surpluss.ledManagerSupport.instance(  )
						delay(10) 
						surpluss.ledManagerSupport.frontLedBlink( 250  )
						delay(1000) 
						surpluss.ledManagerSupport.frontLedOff(  )
					}
					 transition(edgeName="t018",targetState="menageLed",cond=whenDispatch("setLed"))
				}	 
				state("menageLed") { //this:State
					action { //it:State
						if( checkMsgContent( Term.createTerm("setLed(CMD)"), Term.createTerm("setLed(CMD)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								val Cmd = payloadArg(0).toLong() 
								if(Cmd<0){ surpluss.ledManagerSupport.frontLedOff(  )
								 }
								if(Cmd==0.toLong()){ surpluss.ledManagerSupport.frontLedOn(  )
								 }
								if(Cmd>0){ surpluss.ledManagerSupport.frontLedBlink( Cmd  )
								 }
						}
					}
					 transition(edgeName="t019",targetState="menageLed",cond=whenDispatch("onestep"))
				}	 
			}
		}
}
