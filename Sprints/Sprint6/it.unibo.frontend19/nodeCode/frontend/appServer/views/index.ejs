<!DOCTYPE html>
<html>

<head>
	<meta charset="utf-8">
	<title>Maître de salle Console</title>
	<link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css">
	<link rel="stylesheet" type="text/css" href="/public/stylesheets/buttons.css">
	<style>
		.myLabelWhite {
			color: white;
		}

		.myButtonGreen {
			-moz-box-shadow: inset 0px 1px 0px 0px #caefab;
			-webkit-box-shadow: inset 0px 1px 0px 0px #caefab;
			box-shadow: inset 0px 1px 0px 0px #caefab;
			background: -webkit-gradient(linear, left top, left bottom, color-stop(0.05, #77d42a), color-stop(1, #5cb811));
			background: -moz-linear-gradient(top, #77d42a 5%, #5cb811 100%);
			background: -webkit-linear-gradient(top, #77d42a 5%, #5cb811 100%);
			background: -o-linear-gradient(top, #77d42a 5%, #5cb811 100%);
			background: -ms-linear-gradient(top, #77d42a 5%, #5cb811 100%);
			background: linear-gradient(to bottom, #77d42a 5%, #5cb811 100%);
			filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#77d42a', endColorstr='#5cb811', GradientType=0);
			background-color: #77d42a;
			-moz-border-radius: 6px;
			-webkit-border-radius: 6px;
			border-radius: 6px;
			border: 1px solid #268a16;
			display: inline-block;
			cursor: pointer;
			color: white;
			font-family: Arial;
			font-size: 15px;
			font-weight: bold;
			padding: 6px 24px;
			text-decoration: none;
			text-shadow: 0px 1px 0px #aade7c;
			width: 200px;
			margin: 10px 10px 10px 10px;
		}

		.myButtonGreen:hover {
			background: -webkit-gradient(linear, left top, left bottom, color-stop(0.05, #5cb811), color-stop(1, #77d42a));
			background: -moz-linear-gradient(top, #5cb811 5%, #77d42a 100%);
			background: -webkit-linear-gradient(top, #5cb811 5%, #77d42a 100%);
			background: -o-linear-gradient(top, #5cb811 5%, #77d42a 100%);
			background: -ms-linear-gradient(top, #5cb811 5%, #77d42a 100%);
			background: linear-gradient(to bottom, #5cb811 5%, #77d42a 100%);
			filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#5cb811', endColorstr='#77d42a', GradientType=0);
			background-color: #5cb811;
		}

		.myButtonGreen:active {
			position: relative;
			top: 1px;
		}

		.myButtonRed {
			-moz-box-shadow: inset 0px 1px 0px 0px #f29c93;
			-webkit-box-shadow: inset 0px 1px 0px 0px #f29c93;
			box-shadow: inset 0px 1px 0px 0px #f29c93;
			background: -webkit-gradient(linear, left top, left bottom, color-stop(0.05, #fe1a00), color-stop(1, #ce0100));
			background: -moz-linear-gradient(top, #fe1a00 5%, #ce0100 100%);
			background: -webkit-linear-gradient(top, #fe1a00 5%, #ce0100 100%);
			background: -o-linear-gradient(top, #fe1a00 5%, #ce0100 100%);
			background: -ms-linear-gradient(top, #fe1a00 5%, #ce0100 100%);
			background: linear-gradient(to bottom, #fe1a00 5%, #ce0100 100%);
			filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fe1a00', endColorstr='#ce0100', GradientType=0);
			background-color: #fe1a00;
			-moz-border-radius: 6px;
			-webkit-border-radius: 6px;
			border-radius: 6px;
			border: 1px solid #d83526;
			display: inline-block;
			cursor: pointer;
			color: #ffffff;
			font-family: Arial;
			font-size: 15px;
			font-weight: bold;
			padding: 6px 24px;
			text-decoration: none;
			text-shadow: 0px 1px 0px #b23e35;
			width: 200px;
			margin: 10px 10px 10px 10px;
		}

		.myButtonRed:hover {
			background: -webkit-gradient(linear, left top, left bottom, color-stop(0.05, #ce0100), color-stop(1, #fe1a00));
			background: -moz-linear-gradient(top, #ce0100 5%, #fe1a00 100%);
			background: -webkit-linear-gradient(top, #ce0100 5%, #fe1a00 100%);
			background: -o-linear-gradient(top, #ce0100 5%, #fe1a00 100%);
			background: -ms-linear-gradient(top, #ce0100 5%, #fe1a00 100%);
			background: linear-gradient(to bottom, #ce0100 5%, #fe1a00 100%);
			filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ce0100', endColorstr='#fe1a00', GradientType=0);
			background-color: #ce0100;
		}

		.myButtonRed:active {
			position: relative;
			top: 1px;
		}

		.myButtonBlue {
			-moz-box-shadow: inset 0px 1px 0px 0px #97c4fe;
			-webkit-box-shadow: inset 0px 1px 0px 0px #97c4fe;
			box-shadow: inset 0px 1px 0px 0px #97c4fe;
			background: -webkit-gradient(linear, left top, left bottom, color-stop(0.05, #3d94f6), color-stop(1, #1e62d0));
			background: -moz-linear-gradient(top, #3d94f6 5%, #1e62d0 100%);
			background: -webkit-linear-gradient(top, #3d94f6 5%, #1e62d0 100%);
			background: -o-linear-gradient(top, #3d94f6 5%, #1e62d0 100%);
			background: -ms-linear-gradient(top, #3d94f6 5%, #1e62d0 100%);
			background: linear-gradient(to bottom, #3d94f6 5%, #1e62d0 100%);
			filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#3d94f6', endColorstr='#1e62d0', GradientType=0);
			background-color: #3d94f6;
			-moz-border-radius: 6px;
			-webkit-border-radius: 6px;
			border-radius: 6px;
			border: 1px solid #337fed;
			display: inline-block;
			cursor: pointer;
			color: #ffffff;
			font-family: Arial;
			font-size: 15px;
			font-weight: bold;
			padding: 6px 24px;
			text-decoration: none;
			text-shadow: 0px 1px 0px #1570cd;
			width: 200px;
			margin: 10px 10px 10px 10px;
		}

		.myButtonBlue:hover {
			background: -webkit-gradient(linear, left top, left bottom, color-stop(0.05, #1e62d0), color-stop(1, #3d94f6));
			background: -moz-linear-gradient(top, #1e62d0 5%, #3d94f6 100%);
			background: -webkit-linear-gradient(top, #1e62d0 5%, #3d94f6 100%);
			background: -o-linear-gradient(top, #1e62d0 5%, #3d94f6 100%);
			background: -ms-linear-gradient(top, #1e62d0 5%, #3d94f6 100%);
			background: linear-gradient(to bottom, #1e62d0 5%, #3d94f6 100%);
			filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#1e62d0', endColorstr='#3d94f6', GradientType=0);
			background-color: #1e62d0;
		}

		.myButtonBlue:active {
			position: relative;
			top: 1px;
		}

		.myButton {
			-moz-box-shadow: inset 0px 1px 0px 0px #fce2c1;
			-webkit-box-shadow: inset 0px 1px 0px 0px #fce2c1;
			box-shadow: inset 0px 1px 0px 0px #fce2c1;
			background: -webkit-gradient(linear, left top, left bottom, color-stop(0.05, #ffc477), color-stop(1, #fb9e25));
			background: -moz-linear-gradient(top, #ffc477 5%, #fb9e25 100%);
			background: -webkit-linear-gradient(top, #ffc477 5%, #fb9e25 100%);
			background: -o-linear-gradient(top, #ffc477 5%, #fb9e25 100%);
			background: -ms-linear-gradient(top, #ffc477 5%, #fb9e25 100%);
			background: linear-gradient(to bottom, #ffc477 5%, #fb9e25 100%);
			filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffc477', endColorstr='#fb9e25', GradientType=0);
			background-color: #ffc477;
			-moz-border-radius: 6px;
			-webkit-border-radius: 6px;
			border-radius: 6px;
			border: 1px solid #eeb44f;
			display: inline-block;
			cursor: pointer;
			color: #ffffff;
			font-family: Arial;
			font-size: 15px;
			font-weight: bold;
			padding: 6px 24px;
			text-decoration: none;
			text-shadow: 0px 1px 0px #cc9f52;
			width: 200px;
			margin: 10px 10px 10px 10px;
		}

		.myButton:hover {
			background: -webkit-gradient(linear, left top, left bottom, color-stop(0.05, #fb9e25), color-stop(1, #ffc477));
			background: -moz-linear-gradient(top, #fb9e25 5%, #ffc477 100%);
			background: -webkit-linear-gradient(top, #fb9e25 5%, #ffc477 100%);
			background: -o-linear-gradient(top, #fb9e25 5%, #ffc477 100%);
			background: -ms-linear-gradient(top, #fb9e25 5%, #ffc477 100%);
			background: linear-gradient(to bottom, #fb9e25 5%, #ffc477 100%);
			filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fb9e25', endColorstr='#ffc477', GradientType=0);
			background-color: #fb9e25;
		}

		.myButton:active {
			position: relative;
			top: 1px;
		}

		.myButtonDisabled {
			background-color: rgb(58, 5, 5);
			-moz-border-radius: 6px;
			-webkit-border-radius: 6px;
			border-radius: 6px;
			border: 1px solid white;
			display: inline-block;
			cursor: pointer;
			color: #ffffff;
			font-family: Arial;
			font-size: 15px;
			font-weight: bold;
			padding: 6px 24px;
			text-decoration: none;
			width: 200px;
			margin: 10px 10px 10px 10px;
			cursor: not-allowed;
			pointer-events: none;
		}
	</style>
	<script type="text/javascript" src="/socket.io/socket.io.js"></script>
	<script>
		var ResetSonar = 0;
		function getMsgPayload(msg) {
			var start = msg.split("(").length - 1;
			if (start > 0) {
				var temp = msg.split("(")[start].split(")");
				if (temp[0] !== undefined) {
					return temp[0];
				} else {
					return "";
				}
			} else {
				return "";
			}
		}
		let homePos = "X0Y0Osud"
		var contentFood1 = ""; var contentFood2 = ""; var contentDishwasher = ""; var contentPantry = ""; var robotPosition = ""; var lastMission = "";
		var socket = io.connect();
		socket.on('connect', function () { console.log("socket connected"); });
		//ricevo messaggio da socket con contenuto v rappresentante la stringa che verrà inserita nel form.
		socket.on('message', function (v) {
			console.log(v);

			if (v.indexOf("robot") >= 0) {
				document.getElementById('robotDisplay').innerHTML = getMsgPayload(v);
				ResetSonar = ResetSonar + 1;
				if (ResetSonar > 10) { document.getElementById('sonarRobotDisplay').innerHTML = "+inf"; }
			}
			if (v.indexOf("fridge") >= 0) {
				var isFound = v.indexOf("collision") != -1 ? true : false;
				if (!isFound) {
					contentFood1 = v; contentFood2 = v;
					contentFood1 = contentFood1.substr(contentFood1.indexOf('{') + 1)
					contentFood1 = contentFood1.substr(0, contentFood1.indexOf('}'))
					contentFood2 = contentFood2.substr(contentFood2.indexOf('[') + 1)
					contentFood2 = contentFood2.substr(0, contentFood2.indexOf(']'))
					window.sessionStorage.setItem("contentFood1", contentFood1)
					window.sessionStorage.setItem("contentFood2", contentFood2)
					document.getElementById('food').innerHTML = "Pizza: " + contentFood1 + "; Crescentina: " + contentFood2;
				}
			} //FOOD
			if (v.indexOf("dishwasher") >= 0) {
				var isFound = v.indexOf("collision") != -1 ? true : false;
				if (!isFound) {
					contentDishwasher = v;
					contentDishwasher = contentDishwasher.substr(contentDishwasher.indexOf('{') + 1)
					contentDishwasher = contentDishwasher.substr(0, contentDishwasher.indexOf('}'))
					window.sessionStorage.setItem("contentDishwasher", contentDishwasher)
					document.getElementById('dishwasher').innerHTML = "" + contentDishwasher

				}
			} //DISHWASHER 
			if (v.indexOf("pantry") >= 0) {
				var isFound = v.indexOf("collision") != -1 ? true : false;
				if (!isFound) {
					contentPantry = v;
					contentPantry = contentPantry.substr(contentPantry.indexOf('{') + 1)
					contentPantry = contentPantry.substr(0, contentPantry.indexOf('}'))
					window.sessionStorage.setItem("contentPantry", contentPantry)
					document.getElementById('pantry').innerHTML = "" + contentPantry
				}
			} //PANTRY

			if (v.indexOf("sonarRobot") >= 0) { ResetSonar = 0; document.getElementById('sonarRobotDisplay').innerHTML = getMsgPayload(v); }
			if (v.indexOf("sonarLeft") >= 0) { document.getElementById('sonarRobotLDisplay').innerHTML = getMsgPayload(v); }
			if (v.indexOf("sonarRight") >= 0) { document.getElementById('sonarRobotRDisplay').innerHTML = getMsgPayload(v); }
			if (v.indexOf("posRobot") >= 0 && v.split('(')[2].split(')')[0] !== "") {
				robotPosition = getMsgPayload(v)
				sessionStorage.setItem("position", robotPosition)
				document.getElementById('robotPosDisplay').innerHTML = robotPosition;
			}
			if (v.indexOf("maitre") >= 0) {
				var resp = getMsgPayload(v);
				sessionStorage.setItem("lastMission",resp)
				document.getElementById('lastCompleteMission').innerHTML = resp;
				if (resp === "endExploreBoundOk") {
					setState("toExploreTable");
				} else if (resp === "endExploreTableOk") {
					setState("toPrepare");
				} else if (resp === "OkClearingRoom" || resp === "FailClearingRoom") {
					setState("done");
				} else if ((resp[0] === "O" && resp[1] === "k") || (resp[0] === "F" && resp[1] === "a")) {
					setState("ready")
				}
				/*
				if (getSecondLastState() === "null") {
					setState("toExploreTable");
				} else if (lastPos === homePos && getSecondLastState() === "toExploreTable") {
					setState("toPrepare");
				} else if (lastPos === homePos && getSecondLastState() === "toPrepare") {
					setState("ready")
				} else if (lastPos === homePos && getSecondLastState() === "ready") {
					setState("ready")
				} else if (lastPos === homePos && getSecondLastState() === "done") {
					setState("done")
				}
				*/
			}
		});

	</script>

	<script>
		var state = getState()
		var secondLastState = getSecondLastState()
		contentFood1 = getContentFood1()
		contentFood2 = getContentFood2()
		contentPantry = getContentPantry()
		contentDishwasher = getContentDishwasher()
		robotPosition = getRobotPosition()
		lastMission = getLastMission()

		//document.getElementById("robotState").innerHTML = state
		//document.getElementById("robotSecondLastState").innerHTML = secondLastState

		function getLastMission() {
			//console.log("Current State: " + window.sessionStorage.getItem("lastMission"))
			return window.sessionStorage.getItem("lastMission")
		}

		function getRobotPosition() {
			//console.log("Current State: " + window.sessionStorage.getItem("position"))
			return window.sessionStorage.getItem("position")
		}

		function getContentFood1() {
			//console.log("Current State: " + window.sessionStorage.getItem("contentFood1"))
			return window.sessionStorage.getItem("contentFood1")
		}

		function getContentFood2() {
			//console.log("Current State: " + window.sessionStorage.getItem("contentFood2"))
			return window.sessionStorage.getItem("contentFood2")
		}

		function getContentPantry() {
			//console.log("Current State: " + window.sessionStorage.getItem("contentPantry"))
			return window.sessionStorage.getItem("contentPantry")
		}

		function getContentDishwasher() {
			//console.log("Current State: " + window.sessionStorage.getItem("contentDishwasher"))
			return window.sessionStorage.getItem("contentDishwasher")
		}

		function getState() {
			//console.log("Current State: " + window.sessionStorage.getItem("state"))
			return window.sessionStorage.getItem("state")
		}

		function getSecondLastState() {
			//console.log("Second Last State: " + window.sessionStorage.getItem("secondLastState"))
			return window.sessionStorage.getItem("secondLastState")
		}

		function setState(stateName) {
			//console.log("stateName:" + stateName)
			if (stateName !== "stopped") { setSecondLastState(getState()) }
			window.sessionStorage.setItem("state", stateName);
			state = getState();
			loadLayout(stateName)
			//document.getElementById("robotState").innerHTML = state
		}

		function restoreState(stateName) {
			window.sessionStorage.setItem("state", stateName);
			state = getState();
			secondLastState = window.sessionStorage.getItem("secondLastState")
			loadLayout(stateName)
			//document.getElementById("robotState").innerHTML = state
		}

		function setSecondLastState(stateName) {
			//console.log("Second Last State:" + stateName)
			window.sessionStorage.setItem("secondLastState", stateName);
			secondLastState = getSecondLastState();
			//document.getElementById("robotSecondLastState").innerHTML = secondLastState
		}
	</script>
	<!-- <script type="text/javascript" src="QActorWebUI.js"></script> -->
</head>

<body style="background-color: #37464f">

	<div style="background-color: #37464f">
		<center>
			<a href="http://localhost:8080/">
				<h2 style="color:white;background-color: black;padding: 10px;">Maître de salle Console</h2>
			</a>
		</center>

	</div>
	<div style="background-color: rgb(131, 255, 148)">
		<div>
			<b>ROBOT STATE</b>: <span id="robotDisplay"></span>
		</div>
		<div>
			<b>ROBOT POS</b>: <span id="robotPosDisplay"></span>
		</div>
		<div>
			<b>LAST COMPLETE MISSION</b>: <span id="lastCompleteMission"></span>
		</div>
		<div>
			<b>SONAR STATE</b>: <span id="sonarRobotDisplay"></span>
		</div>
		<div>
			<b>SONAR LEFT STATE</b>: <span id="sonarRobotLDisplay"></span>
		</div>
		<div>
			<b>SONAR RIGHT STATE</b>: <span id="sonarRobotRDisplay"></span>
		</div>
		<!--
		<div>
			<b>CURRENT ROBOT STATE</b>: <span id="robotState"></span>
		</div>
		<div>
			<b>SECOND LAST ROBOT STATE</b>: <span id="robotSecondLastState"></span>
		</div>
		-->
	</div>

	</div>

	</div>

	<br></br>
	<center>
		<table class="tg">
			<tr>
				<th class="tg-0lax">
					<form class="myLabelWhite">
						<center>SETUP ROOM:</center>
					</form>
					<form action="/prepare" method="post">
						<input id="prepare" type="submit" class="myButton" value="PREPARE"
							onclick="setState('working')">
					</form>
					<form action="/clear" method="post">
						<input id="clear" type="submit" class="myButton" value="CLEAR" onclick="setState('done')">
					</form>
				</th>

				<th class="tg-0lax">
					<form class="myLabelWhite">
						<center>ADD PIZZA (QNT):</center>
					</form>
					<form action="/addFood1-1" method="post">
						<input id="addFood1-1" type="submit" class="myButtonBlue" value="1"
							onclick="setState('working')">
					</form>
					</form>
					<form action="/addFood1-2" method="post">
						<input id="addFood1-2" type="submit" class="myButtonBlue" value="2"
							onclick="setState('working')">
					</form>
					</form>
					<form action="/addFood1-3" method="post">
						<input id="addFood1-3" type="submit" class="myButtonBlue" value="3"
							onclick="setState('working')">
					</form>

				<th class="tg-0lax">
					<form class="myLabelWhite">
						<center color="white">ADD CRESCENTINA (QNT):</center>
					</form>
					<form action="/addFood2-1" method="post">
						<input id="addFood2-1" type="submit" class="myButtonBlue" value="1"
							onclick="setState('working')">
					</form>
					</form>
					<form action="/addFood2-2" method="post">
						<input id="addFood2-2" type="submit" class="myButtonBlue" value="2"
							onclick="setState('working')">
					</form>
					</form>
					<form action="/addFood2-3" method="post">
						<input id="addFood2-3" type="submit" class="myButtonBlue" value="3"
							onclick="setState('working')">
					</form>

				</th>
				<th class="tg-0lax">
					<form class="myLabelWhite">
						<center>EMERGENCY:</center>
					</form>
					<!--
					<form action="/home" method="post">
						<input id="goHome" type="submit" class="myButton" value="GO HOME" onclick="setState('working')">
					</form>
					-->
					<form action="/stop" method="post">
						<input id="stop" type="submit" class="myButtonRed" value="STOP" onclick="setState('stopped')">
					</form>
					<form action="/resume" method="post">
						<input id="resume" type="submit" class="myButtonGreen" value="RESUME"
							onclick="restoreState('working')">
					</form>
				</th>
				<th class="tg-0lax">
					<form class="myLabelWhite">
						<center>LEARNING ENVIRONMENT:</center>
					</form>
					<form action="/exploreroom" method="post">
						<input id="explorePerimeter" type="submit" class="myButton" value="EXPLORE PERIMETER"
							onclick="setState('working')">
					</form>
					<form action="/exploretable" method="post">
						<input id="exploreTable" type="submit" class="myButton" value="EXPLORE TABLE"
							onclick="setState('working')">
					</form>
				</th>
			</tr>
		</table>


	</center>
	</div>

	<br><br>

	<div style="background-color: #FAF19C">
		<div style="background-color: rgb(240, 225, 95)"">
		<b style=" font-weight: bold;">CAPACITY</b>:
		</div>
		<div>
			<b>Fridge:</b> <span id="food"></span> </li>
		</div>
		<div>
			<b>Dishwasher:</b> <span id="dishwasher"></span>
		</div>
		<div>
			<b>Pantry:</b> <span id="pantry"></span>
		</div>
	</div>

</body>

<script type="text/javascript">

	var prepareDisabled, clearDisabled, addFood11Disabled, addFood12Disabled, addFood13Disabled,
		addFood21Disabled, addFood22Disabled, addFood23Disabled, goHomeDisabled, stopDisabled, resumeDisabled,
		explorePerimeterDisabled, exploreTableDisabled;
	state = getState(); //carico key: "state" su var state
	secondLastState = getSecondLastState();

	if (contentPantry == null) { document.getElementById('pantry').innerHTML = "0" } else { document.getElementById('pantry').innerHTML = "" + contentPantry }
	if (contentDishwasher == null) { document.getElementById('dishwasher').innerHTML = "0" } else { document.getElementById('dishwasher').innerHTML = "" + contentDishwasher }
	if (contentFood1 == null && contentFood2 == null) { document.getElementById('food').innerHTML = "Pizza: 0; Crescentina: 0"; } else { document.getElementById('food').innerHTML = "Pizza: " + contentFood1 + "; Crescentina: " + contentFood2; }
	document.getElementById('robotPosDisplay').innerHTML = robotPosition;
	document.getElementById('lastCompleteMission').innerHTML = lastMission;
	loadLayout(state)

	function loadLayout(stateLayout) {
		//Lettura Stato
		switch (stateLayout) {
			case "toExploreTable":
				prepareDisabled = "myButtonDisabled"; clearDisabled = "myButtonDisabled"; addFood11Disabled = "myButtonDisabled";
				addFood12Disabled = "myButtonDisabled"; addFood13Disabled = "myButtonDisabled"; addFood21Disabled = "myButtonDisabled";
				addFood22Disabled = "myButtonDisabled"; addFood23Disabled = "myButtonDisabled"; goHomeDisabled = "myButtonDisabled";
				stopDisabled = "myButtonDisabled"; resumeDisabled = "myButtonDisabled"; explorePerimeterDisabled = "myButtonDisabled";
				exploreTableDisabled = "myButton";

				setButtons();
				break;
			case "toPrepare":
				prepareDisabled = "myButton"; clearDisabled = "myButtonDisabled"; addFood11Disabled = "myButtonDisabled";
				addFood12Disabled = "myButtonDisabled"; addFood13Disabled = "myButtonDisabled"; addFood21Disabled = "myButtonDisabled";
				addFood22Disabled = "myButtonDisabled"; addFood23Disabled = "myButtonDisabled"; goHomeDisabled = "myButtonDisabled";
				stopDisabled = "myButtonDisabled"; resumeDisabled = "myButtonDisabled"; explorePerimeterDisabled = "myButtonDisabled";
				exploreTableDisabled = "myButtonDisabled";

				setButtons();
				break;

			case "ready":
				prepareDisabled = "myButtonDisabled"; clearDisabled = "myButton"; addFood11Disabled = "myButtonBlue";
				addFood12Disabled = "myButtonBlue"; addFood13Disabled = "myButtonBlue"; addFood21Disabled = "myButtonBlue";
				addFood22Disabled = "myButtonBlue"; addFood23Disabled = "myButtonBlue"; goHomeDisabled = "myButton";
				stopDisabled = "myButtonDisabled"; resumeDisabled = "myButtonDisabled"; explorePerimeterDisabled = "myButtonDisabled";
				exploreTableDisabled = "myButtonDisabled";

				if (contentFood1 === "0") {
					addFood11Disabled = "myButtonDisabled"; addFood12Disabled = "myButtonDisabled"; addFood13Disabled = "myButtonDisabled";
				} else if (contentFood1 === "1") {
					addFood11Disabled = "myButtonBlue"; addFood12Disabled = "myButtonDisabled"; addFood13Disabled = "myButtonDisabled";
				} else if (contentFood1 === "2") {
					addFood11Disabled = "myButtonBlue"; addFood12Disabled = "myButtonBlue"; addFood13Disabled = "myButtonDisabled";
				} else {
					addFood11Disabled = "myButtonBlue"; addFood12Disabled = "myButtonBlue"; addFood13Disabled = "myButtonBlue";
				}

				if (contentFood2 === "0") {
					addFood21Disabled = "myButtonDisabled"; addFood22Disabled = "myButtonDisabled"; addFood23Disabled = "myButtonDisabled";
				} else if (contentFood2 === "1") {
					addFood21Disabled = "myButtonBlue"; addFood22Disabled = "myButtonDisabled"; addFood23Disabled = "myButtonDisabled";
				} else if (contentFood2 === "2") {
					addFood21Disabled = "myButtonBlue"; addFood22Disabled = "myButtonBlue"; addFood23Disabled = "myButtonDisabled";
				} else {
					addFood21Disabled = "myButtonBlue"; addFood22Disabled = "myButtonBlue"; addFood23Disabled = "myButtonBlue";
				}
				setButtons();
				break;

			case "working":
				prepareDisabled = "myButtonDisabled"; clearDisabled = "myButtonDisabled"; addFood11Disabled = "myButtonDisabled";
				addFood12Disabled = "myButtonDisabled"; addFood13Disabled = "myButtonDisabled"; addFood21Disabled = "myButtonDisabled";
				addFood22Disabled = "myButtonDisabled"; addFood23Disabled = "myButtonDisabled"; goHomeDisabled = "myButton";
				stopDisabled = "myButtonRed"; resumeDisabled = "myButtonDisabled"; explorePerimeterDisabled = "myButtonDisabled";
				exploreTableDisabled = "myButtonDisabled";

				setButtons();
				break;

			case "stopped":
				prepareDisabled = "myButtonDisabled"; clearDisabled = "myButtonDisabled"; addFood11Disabled = "myButtonDisabled";
				addFood12Disabled = "myButtonDisabled"; addFood13Disabled = "myButtonDisabled"; addFood21Disabled = "myButtonDisabled";
				addFood22Disabled = "myButtonDisabled"; addFood23Disabled = "myButtonDisabled"; goHomeDisabled = "myButtonDisabled";
				stopDisabled = "myButtonDisabled"; resumeDisabled = "myButtonGreen"; explorePerimeterDisabled = "myButtonDisabled";
				exploreTableDisabled = "myButtonDisabled";

				setButtons();
				break;

			case "done":
				prepareDisabled = "myButtonDisabled"; clearDisabled = "myButtonDisabled"; addFood11Disabled = "myButtonDisabled";
				addFood12Disabled = "myButtonDisabled"; addFood13Disabled = "myButtonDisabled"; addFood21Disabled = "myButtonDisabled";
				addFood22Disabled = "myButtonDisabled"; addFood23Disabled = "myButtonDisabled"; goHomeDisabled = "myButtonDisabled";
				stopDisabled = "myButtonDisabled"; resumeDisabled = "myButtonDisabled"; explorePerimeterDisabled = "myButtonDisabled";
				exploreTableDisabled = "myButtonDisabled";

				setButtons();
				break;

			default: //stato "init"
				console.log("SWITCH CASE: DEFAULT")
				prepareDisabled = "myButtonDisabled"; clearDisabled = "myButtonDisabled"; addFood11Disabled = "myButtonDisabled";
				addFood12Disabled = "myButtonDisabled"; addFood13Disabled = "myButtonDisabled"; addFood21Disabled = "myButtonDisabled";
				addFood22Disabled = "myButtonDisabled"; addFood23Disabled = "myButtonDisabled"; goHomeDisabled = "myButtonDisabled";
				stopDisabled = "myButtonDisabled"; resumeDisabled = "myButtonDisabled"; explorePerimeterDisabled = "myButton";
				exploreTableDisabled = "myButtonDisabled";

				setButtons();
				break;
		}

		function setButton(buttonString, valueString) {
			//console.log("buttonString: "+buttonString+" --- valueString: "+valueString)
			document.getElementById(buttonString).className = valueString
		}
		function setButtons() {
			setButton("prepare", prepareDisabled)
			setButton("clear", clearDisabled)

			setButton("addFood1-1", addFood11Disabled)
			setButton("addFood1-2", addFood12Disabled)
			setButton("addFood1-3", addFood13Disabled)

			setButton("addFood2-1", addFood21Disabled)
			setButton("addFood2-2", addFood22Disabled)
			setButton("addFood2-3", addFood23Disabled)

			//setButton("goHome", goHomeDisabled)
			setButton("stop", stopDisabled)
			setButton("resume", resumeDisabled)

			setButton("explorePerimeter", explorePerimeterDisabled)
			setButton("exploreTable", exploreTableDisabled)
		}
	}
</script>

</html>