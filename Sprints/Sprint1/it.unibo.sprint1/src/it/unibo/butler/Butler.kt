/* Generated by AN DISI Unibo */ 
package it.unibo.butler

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Butler ( name: String, scope: CoroutineScope ) : ActorBasicFsm( name, scope){
 	
	override fun getInitialState() : String{
		return "s0"
	}
		
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		
				var BackTime   = 500L		
				var StepTime   = 330L	//for virtual
				var RotateTime = 300L	//for virtual
				var PauseTime  = 100L 
				var dest_x =7;
				var dest_y =0;
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						println("&&&  butler STARTED")
						solve("consult('sysRules.pl')","") //set resVar	
						solve("consult('floorMap.pl')","") //set resVar	
						solve("showMap","") //set resVar	
					}
					 transition( edgeName="goto",targetState="exploreTheRoom", cond=doswitch() )
				}	 
				state("exploreTheRoom") { //this:State
					action { //it:State
					}
					 transition( edgeName="goto",targetState="testPlan0", cond=doswitch() )
				}	 
				state("testPlan0") { //this:State
					action { //it:State
						forward("onestep", "onestep($StepTime)" ,"butlerstep" ) 
					}
				}	 
				state("testPlan1") { //this:State
					action { //it:State
						forward("askPlan", "askPlan(7,0)" ,"planner" ) 
					}
				}	 
			}
		}
}
