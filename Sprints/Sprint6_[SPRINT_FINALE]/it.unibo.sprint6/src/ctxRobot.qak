System system1

mqttBroker "localhost" : 1883


Dispatch richiesta : richiesta(PAYLOAD)
Dispatch risposta : risposta(PAYLOAD)



Context ctx ip[host="localhost" port=8038] -mqtt

//Esempio di utilizzo comunicazione request-response
/*Vi è un servitore che è sempre in attesa di richieste
 *Ed eventuali clienti che necessitano del servizio
 *
 *I QActor sono in grado di emettere Eventi e di recepre quelli di loro interesse,
 * sono in grado di inviare dispacciare messaggi in modo asincrono, non bloccante.
 * 
 * Non è Built-in la possibilità di dispacciare messaggi in modo sincrono bloccante,
 * di seuito un esempio per far fornte a questa eventualità
 */
QActor cliente context ctx{
	State  s0 initial{
		println("init client")
	}Goto ask
	
	State ask{
		forward server -m richiesta : richiesta(PayloadReq)			
	}Transition t whenMsg risposta ->waitReps
	
	State waitReps{
		onMsg( risposta : risposta( PayloadRes ) ) {
			//TODO
			println("res: ${payloadArg(0)}")
		}
	}
}

QActor server context ctx{
	State  s0 initial{
		println("init server")
	}Transition t whenMsg richiesta ->servi
	
	State servi{
		onMsg( richiesta : richiesta( PayloadReq ) ) {
			//TODO
			println("req: ${payloadArg(0)}")
			forward server -m risposta : risposta(PayloadRes)
		}
	}Transition s whenMsg richiesta ->servi
	
}